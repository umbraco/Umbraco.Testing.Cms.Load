# Repo: andr317c/load-test-pipeline
# File: azure-pipeline.yml

name: powershell_test_pipeline

trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  testVar: 'Not Set'

stages:
- stage: output
  jobs:
    - job: output
      steps:
      #- task: AzureCLI@2
       # inputs:
        #  azureSubscription: 'terraform-umbraco-load-testing-az-connection'
        #  scriptType: 'pscore'
        #  scriptLocation: 'inlineScript'
        #  inlineScript: 'Write-Host "##vso[task.setvariable variable=testVar;]#id#"'
      #- task: PowerShell@2
      #  inputs:
      #    targetType: 'inline'
      #    script: 'Write-Host "$env:ENV_TEST_VAL"'
      #  env:
      #    ENV_TEST_VAL: "$(testVal)"
      - task: AzureCLI@2
        name: tester
        inputs:
          azureSubscription: 'terraform-umbraco-load-testing-az-connection'
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            echo "##vso[task.setvariable variable=ARM_CLIENT_ID;isOutput=true]$servicePrincipalId" 

            echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;isOutput=true]$servicePrincipalKey"

            echo "##vso[task.setvariable variable=ARM_TENANT_ID;isOutput=true]$tenantId"
          addSpnToEnvironment: true
    - job: input
      dependsOn: output
      variables:
        username: $[ dependencies.output.outputs['tester.ARM_CLIENT_ID'] ]
        password: $[ dependencies.output.outputs['tester.ARM_CLIENT_ID'] ]
        tenant_id: $[ dependencies.output.outputs['tester.ARM_TENANT_ID'] ]
      steps:
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: 'Write-Host "az login --service-principal --username $(username) --password $(password) --tenant $(tenant_id)"'
          
      #- bash: |
       #  az login --service-principal --username $(ARM_CLIENT_ID) --password $(ARM_CLIENT_SECRET)  --tenant $(ARM_TENANT_ID)